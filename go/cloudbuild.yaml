steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_REPO_NAME', '.']
  # args: ['ls']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_REPO_NAME']
# Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', 'devops-demo', '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_REPO_NAME', '--region', 'us-central1', '--platform', 'managed', '--update-env-vars', 'NAME=GREEN']
images:
- us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_REPO_NAME

# steps:
#   # Run tests and save to file
#   - name: golang
#     entrypoint: /bin/bash
#     args: 
#       - -c
#       - |
#         go get -u github.com/holmser/gcp-mig-example
        

#   # Docker Build
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 
#            'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA', '.']

#   # Docker push to Google Artifact Registry
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA']

#   # Deploy to Cloud Run
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args: ['run', 'deploy', 'helloworld', 
#            '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA', 
#            '--region', 'us-central1', '--platform', 'managed']

# # Save test logs to Google Cloud Storage
# # artifacts:
# #   objects:
# #     location: gs://$_BUCKET_NAME/
# #     paths:
# #       - ${SHORT_SHA}_test_log.xml
# # Store images in Google Artifact Registry
# images:
#   - us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA